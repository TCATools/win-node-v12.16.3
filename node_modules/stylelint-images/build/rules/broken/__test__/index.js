"use strict";

var _stylelintTestRuleTape = _interopRequireDefault(require("stylelint-test-rule-tape"));

var _index = _interopRequireWildcard(require("../index"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var imageValid = 'https://ramasilveyra.github.io/stylelint-images/media/image-1.png';
var imageBroken = 'https://ramasilveyra.github.io/stylelint-images/media/doesn-exist.png';
(0, _stylelintTestRuleTape.default)(_index.default, {
  ruleName: _index.ruleName,
  config: true,
  accept: [{
    code: `.foo1 {
        background: url("${imageValid}");
      }`
  }, {
    code: `.foo1 {
        background-image: url("${imageValid}");
      }`
  }, {
    code: `.foo1 {
        content: url("${imageValid}");
      }`
  }, {
    code: `.foo2 {
        background: url('${imageValid}');
      }`
  }],
  reject: [{
    code: `.foo1 {
        background: url('${imageBroken}');
      }`,
    message: _index.messages.unexpected(imageBroken),
    line: 2,
    column: 9
  }, {
    code: `.foo1 {
        background-image: url("${imageBroken}");
      }`,
    message: _index.messages.unexpected(imageBroken),
    line: 2,
    column: 9
  }, {
    code: `.foo1 {
        background-image: url("${imageValid}"), url("${imageBroken}");
      }`,
    message: _index.messages.unexpected(imageBroken),
    line: 2,
    column: 9
  }, {
    code: `.foo1 {
        content: url("${imageBroken}");
      }`,
    message: _index.messages.unexpected(imageBroken),
    line: 2,
    column: 9
  }]
});
//# sourceMappingURL=index.js.map