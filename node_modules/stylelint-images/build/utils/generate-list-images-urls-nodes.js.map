{"version":3,"sources":["../../src/utils/generate-list-images-urls-nodes.js"],"names":["URL_VALUE_PATTERNS","URL_PROPERTY_PATTERN","ABSOLUTE_URL","generateListOfImagesURLsAndNodes","root","list","walkDecls","node","newList","generateList","filter","valuePattern","test","value","map","generateItems","URLs","getURLs","URLsAndNodes","url","absoluteURLsAndNodes","leftAbsoluteURLs","replace","splitURLs","split","trim","item"],"mappings":";;;;;;AAAA;AACA;AACA,IAAMA,kBAAkB,GAAG,CACzB,uCADyB,EAEzB,kDAFyB,CAA3B,C,CAIA;AACA;;AACA,IAAMC,oBAAoB,GAAG,6CAA7B,C,CACA;AACA;;AACA,IAAMC,YAAY,GAAG,oBAArB;;AAEe,SAASC,gCAAT,CAA0CC,IAA1C,EAAgD;AAC7D,MAAIC,IAAI,GAAG,EAAX;AAEAD,EAAAA,IAAI,CAACE,SAAL,CAAeL,oBAAf,EAAqC,UAACM,IAAD,EAAU;AAC7C,QAAMC,OAAO,GAAGC,YAAY,CAACF,IAAD,CAA5B;;AAEA,QAAIC,OAAJ,EAAa;AACXH,MAAAA,IAAI,GAAGG,OAAP;AACD;AACF,GAND;AAQA,SAAOH,IAAP;AACD;;AAED,SAASI,YAAT,CAAsBF,IAAtB,EAA4B;AAC1B,SAAOP,kBAAkB,CACtBU,MADI,CACG,UAAAC,YAAY;AAAA,WAAIA,YAAY,CAACC,IAAb,CAAkBL,IAAI,CAACM,KAAvB,CAAJ;AAAA,GADf,EAEJC,GAFI,CAEA,UAAAH,YAAY;AAAA,WAAII,aAAa,CAACR,IAAD,EAAOI,YAAP,CAAjB;AAAA,GAFZ,EAEmD,CAFnD,CAAP;AAGD;;AAED,SAASI,aAAT,CAAuBR,IAAvB,EAA6BI,YAA7B,EAA2C;AACzC,MAAMK,IAAI,GAAGC,OAAO,CAACV,IAAD,EAAOI,YAAP,CAApB;AACA,MAAMO,YAAY,GAAGF,IAAI,CAACF,GAAL,CAAS,UAAAK,GAAG;AAAA,WAAK;AAAEA,MAAAA,GAAF;AAAOZ,MAAAA;AAAP,KAAL;AAAA,GAAZ,CAArB;AACA,MAAMa,oBAAoB,GAAGC,gBAAgB,CAACH,YAAD,CAA7C;AAEA,SAAOE,oBAAP;AACD;;AAED,SAASH,OAAT,CAAiBV,IAAjB,EAAuBI,YAAvB,EAAqC;AACnC,MAAMK,IAAI,GAAGT,IAAI,CAACM,KAAL,CAAWS,OAAX,CAAmBX,YAAnB,EAAiC,IAAjC,CAAb;AACA,MAAMY,SAAS,GAAGP,IAAI,CAACQ,KAAL,CAAW,GAAX,EAAgBV,GAAhB,CAAoB,UAAAK,GAAG;AAAA,WAAIA,GAAG,CAACM,IAAJ,EAAJ;AAAA,GAAvB,CAAlB;AAEA,SAAOF,SAAP;AACD;;AAED,SAASF,gBAAT,CAA0BH,YAA1B,EAAwC;AACtC,SAAOA,YAAY,CAACR,MAAb,CAAoB,UAAAgB,IAAI;AAAA,WAAIxB,YAAY,CAACU,IAAb,CAAkBc,IAAI,CAACP,GAAvB,CAAJ;AAAA,GAAxB,CAAP;AACD","sourcesContent":["// CSS functions that can have an URL image\n// From: https://github.com/postcss/postcss-url/blob/a9d1d4307b061210b1e051d1c2e9c481ca6afbf5/index.js#L26-L29\nconst URL_VALUE_PATTERNS = [\n  /(url\\(\\s*['\"]?)([^\"')]+)([\"']?\\s*\\))/g,\n  /(AlphaImageLoader\\(\\s*src=['\"]?)([^\"')]+)([\"'])/g\n];\n// CSS properties that can have an URL image\n// From: https://github.com/bezoerb/postcss-image-inliner/blob/8b825acebace2f1567195b49e47c0d454de4a3ae/index.js#L69\nconst URL_PROPERTY_PATTERN = /^(background(?:-image)?)|(content)|(cursor)/;\n// Absolute URLs\n// From: http://stackoverflow.com/a/19709846/4709891\nconst ABSOLUTE_URL = /^(?:[a-z]+:)?\\/\\//i;\n\nexport default function generateListOfImagesURLsAndNodes(root) {\n  let list = [];\n\n  root.walkDecls(URL_PROPERTY_PATTERN, (node) => {\n    const newList = generateList(node);\n\n    if (newList) {\n      list = newList;\n    }\n  });\n\n  return list;\n}\n\nfunction generateList(node) {\n  return URL_VALUE_PATTERNS\n    .filter(valuePattern => valuePattern.test(node.value))\n    .map(valuePattern => generateItems(node, valuePattern))[0];\n}\n\nfunction generateItems(node, valuePattern) {\n  const URLs = getURLs(node, valuePattern);\n  const URLsAndNodes = URLs.map(url => ({ url, node }));\n  const absoluteURLsAndNodes = leftAbsoluteURLs(URLsAndNodes);\n\n  return absoluteURLsAndNodes;\n}\n\nfunction getURLs(node, valuePattern) {\n  const URLs = node.value.replace(valuePattern, '$2');\n  const splitURLs = URLs.split(',').map(url => url.trim());\n\n  return splitURLs;\n}\n\nfunction leftAbsoluteURLs(URLsAndNodes) {\n  return URLsAndNodes.filter(item => ABSOLUTE_URL.test(item.url));\n}\n"],"file":"generate-list-images-urls-nodes.js"}